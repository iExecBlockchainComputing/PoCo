[
 {
  "contractName": "CounterfactualFactory",
  "humanReadableAbiList": []
 },
 {
  "contractName": "GenericFactory",
  "humanReadableAbiList": [
   "function createContract(bytes,bytes32) nonpayable returns (address)",
   "function createContractAndCall(bytes,bytes32,bytes) nonpayable returns (address)",
   "function predictAddress(bytes,bytes32) view returns (address)",
   "function predictAddressWithCall(bytes,bytes32,bytes) view returns (address)",
   "event NewContract(address)"
  ]
 },
 {
  "contractName": "IexecClerkInterface",
  "humanReadableAbiList": [
   "function EIP712DOMAIN_SEPARATOR() view returns (bytes32)",
   "function GROUPMEMBER_PURPOSE() view returns (uint256)",
   "function KITTY_MIN() view returns (uint256)",
   "function KITTY_RATIO() view returns (uint256)",
   "function WORKERPOOL_STAKE_RATIO() view returns (uint256)",
   "function broadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable",
   "function broadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable",
   "function cancelAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable returns (bool)",
   "function cancelDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable returns (bool)",
   "function cancelRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bool)",
   "function cancelWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable returns (bool)",
   "function deposit(uint256) nonpayable returns (bool)",
   "function depositFor(uint256,address) nonpayable returns (bool)",
   "function depositForArray(uint256[],address[]) nonpayable returns (bool)",
   "function iexechub() view returns (address)",
   "function matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function signAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable returns (bool)",
   "function signDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable returns (bool)",
   "function signRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bool)",
   "function signWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable returns (bool)",
   "function token() view returns (address)",
   "function verifySignature(address,bytes32,bytes) view returns (bool)",
   "function viewAccount(address) view returns (tuple)",
   "function viewAccountABILegacy(address) view returns (uint256, uint256)",
   "function viewConfigABILegacy(bytes32) view returns (uint256, uint256, uint256, uint256, uint256, uint256)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewDealABILegacy_pt1(bytes32) view returns (address, address, uint256, address, address, uint256, address, address, uint256)",
   "function viewDealABILegacy_pt2(bytes32) view returns (uint256, bytes32, address, address, address, string)",
   "function viewPresigned(bytes32) view returns (bool)",
   "function viewRequestDeals(bytes32) view returns (bytes32[])",
   "function withdraw(uint256) nonpayable returns (bool)",
   "event BroadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes))",
   "event BroadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes))",
   "event ClosedAppOrder(bytes32)",
   "event ClosedDatasetOrder(bytes32)",
   "event ClosedRequestOrder(bytes32)",
   "event ClosedWorkerpoolOrder(bytes32)",
   "event Deposit(address,uint256)",
   "event DepositFor(address,uint256,address)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNotice(address,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event Unlock(address,uint256)",
   "event Withdraw(address,uint256)"
  ]
 },
 {
  "contractName": "IexecHubInterface",
  "humanReadableAbiList": [
   "function CONSENSUS_DURATION_RATIO() view returns (uint256)",
   "function REVEAL_DURATION_RATIO() view returns (uint256)",
   "function appregistry() view returns (address)",
   "function attachContracts(address,address,address,address) nonpayable",
   "function checkResources(address,address,address) view returns (bool)",
   "function claim(bytes32) nonpayable",
   "function claimArray(bytes32[]) nonpayable returns (bool)",
   "function contribute(bytes32,bytes32,bytes32,address,bytes,bytes) nonpayable",
   "function countCategory() view returns (uint256)",
   "function createCategory(string,string,uint256) nonpayable returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function finalize(bytes32,bytes) nonpayable",
   "function iexecclerk() view returns (address)",
   "function initialize(bytes32,uint256) nonpayable returns (bytes32)",
   "function initializeAndClaimArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function initializeArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function reopen(bytes32) nonpayable",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal(bytes32,bytes32) nonpayable",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewCategoryABILegacy(uint256) view returns (string, string, uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewContributionABILegacy(bytes32,address) view returns (uint8, bytes32, bytes32, address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewTaskABILegacy(bytes32) view returns (uint8, bytes32, uint256, uint256, uint256, uint256, uint256, bytes32, uint256, uint256, address[], bytes)",
   "function workerpoolregistry() view returns (address)",
   "event AccurateContribution(address,bytes32)",
   "event CreateCategory(uint256,string,string,uint256)",
   "event FaultyContribution(address,bytes32)",
   "event TaskClaimed(bytes32)",
   "event TaskConsensus(bytes32,bytes32)",
   "event TaskContribute(bytes32,address,bytes32)",
   "event TaskFinalize(bytes32,bytes)",
   "event TaskInitialize(bytes32,address)",
   "event TaskReopen(bytes32)",
   "event TaskReveal(bytes32,address,bytes32)"
  ]
 },
 {
  "contractName": "AppInterface",
  "humanReadableAbiList": [
   "function m_appChecksum() view returns (bytes32)",
   "function m_appMREnclave() view returns (bytes)",
   "function m_appMultiaddr() view returns (bytes)",
   "function m_appName() view returns (string)",
   "function m_appType() view returns (string)",
   "function owner() view returns (address)"
  ]
 },
 {
  "contractName": "AppRegistryInterface",
  "humanReadableAbiList": [
   "function createApp(address,string,string,bytes,bytes32,bytes) nonpayable returns (address)",
   "function isRegistered(address) view returns (bool)",
   "function viewCount(address) view returns (uint256)",
   "function viewEntry(address,uint256) view returns (address)",
   "event CreateApp(address,address)"
  ]
 },
 {
  "contractName": "DatasetInterface",
  "humanReadableAbiList": [
   "function m_datasetChecksum() view returns (bytes32)",
   "function m_datasetMultiaddr() view returns (bytes)",
   "function m_datasetName() view returns (string)",
   "function owner() view returns (address)"
  ]
 },
 {
  "contractName": "DatasetRegistryInterface",
  "humanReadableAbiList": [
   "function createDataset(address,string,bytes,bytes32) nonpayable returns (address)",
   "function isRegistered(address) view returns (bool)",
   "function viewCount(address) view returns (uint256)",
   "function viewEntry(address,uint256) view returns (address)",
   "event CreateDataset(address,address)"
  ]
 },
 {
  "contractName": "WorkerpoolInterface",
  "humanReadableAbiList": [
   "function changePolicy(uint256,uint256) nonpayable",
   "function m_schedulerRewardRatioPolicy() view returns (uint256)",
   "function m_workerStakeRatioPolicy() view returns (uint256)",
   "function m_workerpoolDescription() view returns (string)",
   "function owner() view returns (address)",
   "event PolicyUpdate(uint256,uint256,uint256,uint256)"
  ]
 },
 {
  "contractName": "WorkerpoolRegistryInterface",
  "humanReadableAbiList": [
   "function createWorkerpool(address,string) nonpayable returns (address)",
   "function isRegistered(address) view returns (bool)",
   "function viewCount(address) view returns (uint256)",
   "function viewEntry(address,uint256) view returns (address)",
   "event CreateWorkerpool(address,address,string)"
  ]
 },
 {
  "contractName": "IexecODBLibCore",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IexecODBLibOrders",
  "humanReadableAbiList": [
   "function APPORDER_TYPEHASH() view returns (bytes32)",
   "function DATASETORDER_TYPEHASH() view returns (bytes32)",
   "function EIP712DOMAIN_TYPEHASH() view returns (bytes32)",
   "function REQUESTORDER_TYPEHASH() view returns (bytes32)",
   "function WORKERPOOLORDER_TYPEHASH() view returns (bytes32)",
   "function hash((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) pure returns (bytes32)",
   "function hash((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) pure returns (bytes32)",
   "function hash((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) pure returns (bytes32)",
   "function hash((string,string,uint256,address)) pure returns (bytes32)",
   "function toEthTypedStructHash(bytes32,bytes32) pure returns (bytes32)"
  ]
 },
 {
  "contractName": "IOracle",
  "humanReadableAbiList": [
   "function resultFor(bytes32) view returns (bytes)"
  ]
 },
 {
  "contractName": "IOracleConsumer",
  "humanReadableAbiList": [
   "function receiveResult(bytes32,bytes) nonpayable"
  ]
 },
 {
  "contractName": "IERC1271",
  "humanReadableAbiList": [
   "function isValidSignature(bytes,bytes) view returns (bytes4)"
  ]
 },
 {
  "contractName": "IERC1654",
  "humanReadableAbiList": [
   "function isValidSignature(bytes32,bytes) view returns (bytes4)"
  ]
 },
 {
  "contractName": "IERC734",
  "humanReadableAbiList": [
   "function ACTION_KEY() view returns (uint256)",
   "function CLAIM_SIGNER_KEY() view returns (uint256)",
   "function ECDSA_TYPE() view returns (uint256)",
   "function ENCRYPTION_KEY() view returns (uint256)",
   "function MANAGEMENT_KEY() view returns (uint256)",
   "function RSA_TYPE() view returns (uint256)",
   "function addKey(bytes32,uint256,uint256) nonpayable returns (bool)",
   "function approve(uint256,bool) nonpayable returns (bool)",
   "function execute(address,uint256,bytes) nonpayable returns (uint256)",
   "function getKey(bytes32) view returns (uint256[], uint256, bytes32)",
   "function getKeysByPurpose(uint256) view returns (bytes32[])",
   "function keyHasPurpose(bytes32,uint256) view returns (bool)",
   "function removeKey(bytes32,uint256) nonpayable returns (bool)",
   "event Approved(uint256,bool)",
   "event Executed(uint256,address,uint256,bytes)",
   "event ExecutionFailed(uint256,address,uint256,bytes)",
   "event ExecutionRequested(uint256,address,uint256,bytes)",
   "event KeyAdded(bytes32,uint256,uint256)",
   "event KeyRemoved(bytes32,uint256,uint256)"
  ]
 },
 {
  "contractName": "SafeMathExtended",
  "humanReadableAbiList": []
 },
 {
  "contractName": "BaseUpgradeabilityProxy",
  "humanReadableAbiList": [
   "event Upgraded(address)"
  ]
 },
 {
  "contractName": "InitializableUpgradeabilityProxy",
  "humanReadableAbiList": [
   "function initialize(address,bytes) payable",
   "event Upgraded(address)"
  ]
 },
 {
  "contractName": "Proxy",
  "humanReadableAbiList": []
 },
 {
  "contractName": "DiamondCutFacet",
  "humanReadableAbiList": [
   "function diamondCut((address,uint8,bytes4[])[],address,bytes) nonpayable",
   "event DiamondCut((address,uint8,bytes4[])[],address,bytes)"
  ]
 },
 {
  "contractName": "DiamondLoupeFacet",
  "humanReadableAbiList": [
   "function facetAddress(bytes4) view returns (address)",
   "function facetAddresses() view returns (address[])",
   "function facetFunctionSelectors(address) view returns (bytes4[])",
   "function facets() view returns (tuple[])",
   "function supportsInterface(bytes4) view returns (bool)"
  ]
 },
 {
  "contractName": "OwnershipFacet",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function transferOwnership(address) nonpayable",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "IDiamond",
  "humanReadableAbiList": [
   "event DiamondCut((address,uint8,bytes4[])[],address,bytes)"
  ]
 },
 {
  "contractName": "IDiamondCut",
  "humanReadableAbiList": [
   "function diamondCut((address,uint8,bytes4[])[],address,bytes) nonpayable",
   "event DiamondCut((address,uint8,bytes4[])[],address,bytes)"
  ]
 },
 {
  "contractName": "IDiamondLoupe",
  "humanReadableAbiList": [
   "function facetAddress(bytes4) view returns (address)",
   "function facetAddresses() view returns (address[])",
   "function facetFunctionSelectors(address) view returns (bytes4[])",
   "function facets() view returns (tuple[])"
  ]
 },
 {
  "contractName": "IERC165",
  "humanReadableAbiList": [
   "function supportsInterface(bytes4) view returns (bool)"
  ]
 },
 {
  "contractName": "IERC173",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function transferOwnership(address) nonpayable",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "LibDiamond",
  "humanReadableAbiList": [
   "event DiamondCut((address,uint8,bytes4[])[],address,bytes)",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "DiamondInit",
  "humanReadableAbiList": [
   "function init() nonpayable"
  ]
 },
 {
  "contractName": "Ownable",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function renounceOwnership() nonpayable",
   "function transferOwnership(address) nonpayable",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "IERC1271",
  "humanReadableAbiList": [
   "function isValidSignature(bytes32,bytes) view returns (bytes4)"
  ]
 },
 {
  "contractName": "IERC5313",
  "humanReadableAbiList": [
   "function owner() view returns (address)"
  ]
 },
 {
  "contractName": "IERC20",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function approve(address,uint256) nonpayable returns (bool)",
   "function balanceOf(address) view returns (uint256)",
   "function totalSupply() view returns (uint256)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IERC721",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IERC721Enumerable",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "Context",
  "humanReadableAbiList": []
 },
 {
  "contractName": "Strings",
  "humanReadableAbiList": []
 },
 {
  "contractName": "ECDSA",
  "humanReadableAbiList": []
 },
 {
  "contractName": "MessageHashUtils",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IERC165",
  "humanReadableAbiList": [
   "function supportsInterface(bytes4) view returns (bool)"
  ]
 },
 {
  "contractName": "Math",
  "humanReadableAbiList": []
 },
 {
  "contractName": "SafeCast",
  "humanReadableAbiList": []
 },
 {
  "contractName": "SignedMath",
  "humanReadableAbiList": []
 },
 {
  "contractName": "Context",
  "humanReadableAbiList": []
 },
 {
  "contractName": "AccessControl",
  "humanReadableAbiList": [
   "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
   "function getRoleAdmin(bytes32) view returns (bytes32)",
   "function getRoleMember(bytes32,uint256) view returns (address)",
   "function getRoleMemberCount(bytes32) view returns (uint256)",
   "function grantRole(bytes32,address) nonpayable",
   "function hasRole(bytes32,address) view returns (bool)",
   "function renounceRole(bytes32,address) nonpayable",
   "function revokeRole(bytes32,address) nonpayable",
   "event RoleAdminChanged(bytes32,bytes32,bytes32)",
   "event RoleGranted(bytes32,address,address)",
   "event RoleRevoked(bytes32,address,address)"
  ]
 },
 {
  "contractName": "Ownable",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function renounceOwnership() nonpayable",
   "function transferOwnership(address) nonpayable",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "ERC165",
  "humanReadableAbiList": [
   "function supportsInterface(bytes4) view returns (bool)"
  ]
 },
 {
  "contractName": "IERC165",
  "humanReadableAbiList": [
   "function supportsInterface(bytes4) view returns (bool)"
  ]
 },
 {
  "contractName": "SafeMath",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IERC20",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function approve(address,uint256) nonpayable returns (bool)",
   "function balanceOf(address) view returns (uint256)",
   "function totalSupply() view returns (uint256)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "ERC721",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function baseURI() view returns (string)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function name() view returns (string)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function symbol() view returns (string)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function tokenURI(uint256) view returns (string)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IERC721",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IERC721Enumerable",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IERC721Metadata",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function name() view returns (string)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function symbol() view returns (string)",
   "function tokenURI(uint256) view returns (string)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IERC721Receiver",
  "humanReadableAbiList": [
   "function onERC721Received(address,address,uint256,bytes) nonpayable returns (bytes4)"
  ]
 },
 {
  "contractName": "Address",
  "humanReadableAbiList": []
 },
 {
  "contractName": "Create2",
  "humanReadableAbiList": []
 },
 {
  "contractName": "EnumerableMap",
  "humanReadableAbiList": []
 },
 {
  "contractName": "EnumerableSet",
  "humanReadableAbiList": []
 },
 {
  "contractName": "Strings",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IUniswapV2Router01",
  "humanReadableAbiList": [
   "function WETH() pure returns (address)",
   "function addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256, uint256, uint256)",
   "function addLiquidityETH(address,uint256,uint256,uint256,address,uint256) payable returns (uint256, uint256, uint256)",
   "function factory() pure returns (address)",
   "function getAmountIn(uint256,uint256,uint256) pure returns (uint256)",
   "function getAmountOut(uint256,uint256,uint256) pure returns (uint256)",
   "function getAmountsIn(uint256,address[]) view returns (uint256[])",
   "function getAmountsOut(uint256,address[]) view returns (uint256[])",
   "function quote(uint256,uint256,uint256) pure returns (uint256)",
   "function removeLiquidity(address,address,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256, uint256)",
   "function removeLiquidityETH(address,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256, uint256)",
   "function removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32) nonpayable returns (uint256, uint256)",
   "function removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32) nonpayable returns (uint256, uint256)",
   "function swapETHForExactTokens(uint256,address[],address,uint256) payable returns (uint256[])",
   "function swapExactETHForTokens(uint256,address[],address,uint256) payable returns (uint256[])",
   "function swapExactTokensForETH(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])",
   "function swapExactTokensForTokens(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])",
   "function swapTokensForExactETH(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])",
   "function swapTokensForExactTokens(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])"
  ]
 },
 {
  "contractName": "IUniswapV2Router02",
  "humanReadableAbiList": [
   "function WETH() pure returns (address)",
   "function addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256, uint256, uint256)",
   "function addLiquidityETH(address,uint256,uint256,uint256,address,uint256) payable returns (uint256, uint256, uint256)",
   "function factory() pure returns (address)",
   "function getAmountIn(uint256,uint256,uint256) pure returns (uint256)",
   "function getAmountOut(uint256,uint256,uint256) pure returns (uint256)",
   "function getAmountsIn(uint256,address[]) view returns (uint256[])",
   "function getAmountsOut(uint256,address[]) view returns (uint256[])",
   "function quote(uint256,uint256,uint256) pure returns (uint256)",
   "function removeLiquidity(address,address,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256, uint256)",
   "function removeLiquidityETH(address,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256, uint256)",
   "function removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256) nonpayable returns (uint256)",
   "function removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32) nonpayable returns (uint256, uint256)",
   "function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32) nonpayable returns (uint256)",
   "function removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32) nonpayable returns (uint256, uint256)",
   "function swapETHForExactTokens(uint256,address[],address,uint256) payable returns (uint256[])",
   "function swapExactETHForTokens(uint256,address[],address,uint256) payable returns (uint256[])",
   "function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256) payable",
   "function swapExactTokensForETH(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])",
   "function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256) nonpayable",
   "function swapExactTokensForTokens(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])",
   "function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256) nonpayable",
   "function swapTokensForExactETH(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])",
   "function swapTokensForExactTokens(uint256,uint256,address[],address,uint256) nonpayable returns (uint256[])"
  ]
 },
 {
  "contractName": "Diamond",
  "humanReadableAbiList": [
   "event DiamondCut((address,uint8,bytes4[])[],address,bytes)",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "IexecInterfaceNative",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function appregistry() view returns (address)",
   "function approve(address,uint256) nonpayable returns (bool)",
   "function approveAndCall(address,uint256,bytes) nonpayable returns (bool)",
   "function assertDatasetDealCompatibility((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),bytes32) view",
   "function balanceOf(address) view returns (uint256)",
   "function broadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable",
   "function broadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable",
   "function callbackgas() view returns (uint256)",
   "function changeRegistries(address,address,address) nonpayable",
   "function claim(bytes32) nonpayable",
   "function claimArray(bytes32[]) nonpayable returns (bool)",
   "function computeDealVolume((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) view returns (uint256)",
   "function configure(address,string,string,uint8,address,address,address,address) nonpayable",
   "function contribute(bytes32,bytes32,bytes32,address,bytes,bytes) nonpayable",
   "function contributeAndFinalize(bytes32,bytes32,bytes,bytes,address,bytes,bytes) nonpayable",
   "function contribution_deadline_ratio() view returns (uint256)",
   "function countCategory() view returns (uint256)",
   "function createCategory(string,string,uint256) nonpayable returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function decimals() view returns (uint8)",
   "function decreaseAllowance(address,uint256) nonpayable returns (bool)",
   "function deposit() payable returns (bool)",
   "function depositFor(address) payable returns (bool)",
   "function depositForArray(uint256[],address[]) payable returns (bool)",
   "function domain() view returns (tuple)",
   "function eip712domain_separator() view returns (bytes32)",
   "function final_deadline_ratio() view returns (uint256)",
   "function finalize(bytes32,bytes,bytes) nonpayable",
   "function frozenOf(address) view returns (uint256)",
   "function groupmember_purpose() view returns (uint256)",
   "function importScore(address) nonpayable",
   "function increaseAllowance(address,uint256) nonpayable returns (bool)",
   "function initialize(bytes32,uint256) nonpayable returns (bytes32)",
   "function initializeAndClaimArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function initializeArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function kitty_address() view returns (address)",
   "function kitty_min() view returns (uint256)",
   "function kitty_ratio() view returns (uint256)",
   "function manageAppOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageDatasetOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageRequestOrder(((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageWorkerpoolOrder(((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function name() view returns (string)",
   "function owner() view returns (address)",
   "function receiveApproval(address,uint256,address,bytes) nonpayable returns (bool)",
   "function recover() nonpayable returns (uint256)",
   "function renounceOwnership() nonpayable",
   "function reopen(bytes32) nonpayable",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal(bytes32,bytes32) nonpayable",
   "function reveal_deadline_ratio() view returns (uint256)",
   "function setCallbackGas(uint256) nonpayable",
   "function setTeeBroker(address) nonpayable",
   "function sponsorMatchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function symbol() view returns (string)",
   "function teebroker() view returns (address)",
   "function token() view returns (address)",
   "function totalSupply() view returns (uint256)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "function transferOwnership(address) nonpayable",
   "function updateDomainSeparator() nonpayable",
   "function verifyPresignature(address,bytes32) view returns (bool)",
   "function verifyPresignatureOrSignature(address,bytes32,bytes) view returns (bool)",
   "function verifySignature(address,bytes32,bytes) view returns (bool)",
   "function viewAccount(address) view returns (tuple)",
   "function viewAccountABILegacy(address) view returns (uint256, uint256)",
   "function viewApp(address) view returns (tuple)",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewCategoryABILegacy(uint256) view returns (string, string, uint256)",
   "function viewConfigABILegacy(bytes32) view returns (uint256, uint256, uint256, uint256, uint256, uint256)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewContributionABILegacy(bytes32,address) view returns (uint8, bytes32, bytes32, address)",
   "function viewDataset(address) view returns (tuple)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewDealABILegacy_pt1(bytes32) view returns (address, address, uint256, address, address, uint256, address, address, uint256)",
   "function viewDealABILegacy_pt2(bytes32) view returns (uint256, bytes32, address, address, address, string)",
   "function viewPresigned(bytes32) view returns (address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewTaskABILegacy(bytes32) view returns (uint8, bytes32, uint256, uint256, uint256, uint256, uint256, bytes32, uint256, uint256, address[], bytes)",
   "function viewWorkerpool(address) view returns (tuple)",
   "function withdraw(uint256) nonpayable returns (bool)",
   "function withdrawTo(uint256,address) nonpayable returns (bool)",
   "function workerpool_stake_ratio() view returns (uint256)",
   "function workerpoolregistry() view returns (address)",
   "event AccurateContribution(address,bytes32)",
   "event Approval(address,address,uint256)",
   "event BroadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes))",
   "event BroadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes))",
   "event ClosedAppOrder(bytes32)",
   "event ClosedDatasetOrder(bytes32)",
   "event ClosedRequestOrder(bytes32)",
   "event ClosedWorkerpoolOrder(bytes32)",
   "event CreateCategory(uint256,string,string,uint256)",
   "event DealSponsored(bytes32,address)",
   "event FaultyContribution(address,bytes32)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event OwnershipTransferred(address,address)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNotice(address,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event SignedAppOrder(bytes32)",
   "event SignedDatasetOrder(bytes32)",
   "event SignedRequestOrder(bytes32)",
   "event SignedWorkerpoolOrder(bytes32)",
   "event TaskClaimed(bytes32)",
   "event TaskConsensus(bytes32,bytes32)",
   "event TaskContribute(bytes32,address,bytes32)",
   "event TaskFinalize(bytes32,bytes)",
   "event TaskInitialize(bytes32,address)",
   "event TaskReopen(bytes32)",
   "event TaskReveal(bytes32,address,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecInterfaceToken",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function appregistry() view returns (address)",
   "function approve(address,uint256) nonpayable returns (bool)",
   "function approveAndCall(address,uint256,bytes) nonpayable returns (bool)",
   "function assertDatasetDealCompatibility((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),bytes32) view",
   "function balanceOf(address) view returns (uint256)",
   "function broadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable",
   "function broadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable",
   "function callbackgas() view returns (uint256)",
   "function changeRegistries(address,address,address) nonpayable",
   "function claim(bytes32) nonpayable",
   "function claimArray(bytes32[]) nonpayable returns (bool)",
   "function computeDealVolume((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) view returns (uint256)",
   "function configure(address,string,string,uint8,address,address,address,address) nonpayable",
   "function contribute(bytes32,bytes32,bytes32,address,bytes,bytes) nonpayable",
   "function contributeAndFinalize(bytes32,bytes32,bytes,bytes,address,bytes,bytes) nonpayable",
   "function contribution_deadline_ratio() view returns (uint256)",
   "function countCategory() view returns (uint256)",
   "function createCategory(string,string,uint256) nonpayable returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function decimals() view returns (uint8)",
   "function decreaseAllowance(address,uint256) nonpayable returns (bool)",
   "function deposit(uint256) nonpayable returns (bool)",
   "function depositFor(uint256,address) nonpayable returns (bool)",
   "function depositForArray(uint256[],address[]) nonpayable returns (bool)",
   "function domain() view returns (tuple)",
   "function eip712domain_separator() view returns (bytes32)",
   "function final_deadline_ratio() view returns (uint256)",
   "function finalize(bytes32,bytes,bytes) nonpayable",
   "function frozenOf(address) view returns (uint256)",
   "function groupmember_purpose() view returns (uint256)",
   "function importScore(address) nonpayable",
   "function increaseAllowance(address,uint256) nonpayable returns (bool)",
   "function initialize(bytes32,uint256) nonpayable returns (bytes32)",
   "function initializeAndClaimArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function initializeArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function kitty_address() view returns (address)",
   "function kitty_min() view returns (uint256)",
   "function kitty_ratio() view returns (uint256)",
   "function manageAppOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageDatasetOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageRequestOrder(((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageWorkerpoolOrder(((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function name() view returns (string)",
   "function owner() view returns (address)",
   "function receiveApproval(address,uint256,address,bytes) nonpayable returns (bool)",
   "function recover() nonpayable returns (uint256)",
   "function renounceOwnership() nonpayable",
   "function reopen(bytes32) nonpayable",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal(bytes32,bytes32) nonpayable",
   "function reveal_deadline_ratio() view returns (uint256)",
   "function setCallbackGas(uint256) nonpayable",
   "function setTeeBroker(address) nonpayable",
   "function sponsorMatchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function symbol() view returns (string)",
   "function teebroker() view returns (address)",
   "function token() view returns (address)",
   "function totalSupply() view returns (uint256)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "function transferOwnership(address) nonpayable",
   "function updateDomainSeparator() nonpayable",
   "function verifyPresignature(address,bytes32) view returns (bool)",
   "function verifyPresignatureOrSignature(address,bytes32,bytes) view returns (bool)",
   "function verifySignature(address,bytes32,bytes) view returns (bool)",
   "function viewAccount(address) view returns (tuple)",
   "function viewAccountABILegacy(address) view returns (uint256, uint256)",
   "function viewApp(address) view returns (tuple)",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewCategoryABILegacy(uint256) view returns (string, string, uint256)",
   "function viewConfigABILegacy(bytes32) view returns (uint256, uint256, uint256, uint256, uint256, uint256)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewContributionABILegacy(bytes32,address) view returns (uint8, bytes32, bytes32, address)",
   "function viewDataset(address) view returns (tuple)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewDealABILegacy_pt1(bytes32) view returns (address, address, uint256, address, address, uint256, address, address, uint256)",
   "function viewDealABILegacy_pt2(bytes32) view returns (uint256, bytes32, address, address, address, string)",
   "function viewPresigned(bytes32) view returns (address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewTaskABILegacy(bytes32) view returns (uint8, bytes32, uint256, uint256, uint256, uint256, uint256, bytes32, uint256, uint256, address[], bytes)",
   "function viewWorkerpool(address) view returns (tuple)",
   "function withdraw(uint256) nonpayable returns (bool)",
   "function withdrawTo(uint256,address) nonpayable returns (bool)",
   "function workerpool_stake_ratio() view returns (uint256)",
   "function workerpoolregistry() view returns (address)",
   "event AccurateContribution(address,bytes32)",
   "event Approval(address,address,uint256)",
   "event BroadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes))",
   "event BroadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes))",
   "event ClosedAppOrder(bytes32)",
   "event ClosedDatasetOrder(bytes32)",
   "event ClosedRequestOrder(bytes32)",
   "event ClosedWorkerpoolOrder(bytes32)",
   "event CreateCategory(uint256,string,string,uint256)",
   "event DealSponsored(bytes32,address)",
   "event FaultyContribution(address,bytes32)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event OwnershipTransferred(address,address)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNotice(address,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event SignedAppOrder(bytes32)",
   "event SignedDatasetOrder(bytes32)",
   "event SignedRequestOrder(bytes32)",
   "event SignedWorkerpoolOrder(bytes32)",
   "event TaskClaimed(bytes32)",
   "event TaskConsensus(bytes32,bytes32)",
   "event TaskContribute(bytes32,address,bytes32)",
   "event TaskFinalize(bytes32,bytes)",
   "event TaskInitialize(bytes32,address)",
   "event TaskReopen(bytes32)",
   "event TaskReveal(bytes32,address,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IERC734",
  "humanReadableAbiList": [
   "function keyHasPurpose(bytes32,uint256) view returns (bool)"
  ]
 },
 {
  "contractName": "IOracleConsumer",
  "humanReadableAbiList": [
   "function receiveResult(bytes32,bytes) nonpayable"
  ]
 },
 {
  "contractName": "FacetBase",
  "humanReadableAbiList": []
 },
 {
  "contractName": "FacetBase",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IexecAccessorsABILegacyFacet",
  "humanReadableAbiList": [
   "function viewAccountABILegacy(address) view returns (uint256, uint256)",
   "function viewCategoryABILegacy(uint256) view returns (string, string, uint256)",
   "function viewConfigABILegacy(bytes32) view returns (uint256, uint256, uint256, uint256, uint256, uint256)",
   "function viewContributionABILegacy(bytes32,address) view returns (uint8, bytes32, bytes32, address)",
   "function viewDealABILegacy_pt1(bytes32) view returns (address, address, uint256, address, address, uint256, address, address, uint256)",
   "function viewDealABILegacy_pt2(bytes32) view returns (uint256, bytes32, address, address, address, string)",
   "function viewTaskABILegacy(bytes32) view returns (uint8, bytes32, uint256, uint256, uint256, uint256, uint256, bytes32, uint256, uint256, address[], bytes)"
  ]
 },
 {
  "contractName": "IexecCategoryManagerFacet",
  "humanReadableAbiList": [
   "function createCategory(string,string,uint256) nonpayable returns (uint256)",
   "event CreateCategory(uint256,string,string,uint256)"
  ]
 },
 {
  "contractName": "IexecConfigurationExtraFacet",
  "humanReadableAbiList": [
   "function changeRegistries(address,address,address) nonpayable"
  ]
 },
 {
  "contractName": "IexecConfigurationFacet",
  "humanReadableAbiList": [
   "function configure(address,string,string,uint8,address,address,address,address) nonpayable",
   "function domain() view returns (tuple)",
   "function importScore(address) nonpayable",
   "function setCallbackGas(uint256) nonpayable",
   "function setTeeBroker(address) nonpayable",
   "function updateDomainSeparator() nonpayable"
  ]
 },
 {
  "contractName": "IexecERC20Core",
  "humanReadableAbiList": [
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IexecERC20Facet",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable returns (bool)",
   "function approveAndCall(address,uint256,bytes) nonpayable returns (bool)",
   "function decreaseAllowance(address,uint256) nonpayable returns (bool)",
   "function increaseAllowance(address,uint256) nonpayable returns (bool)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IexecEscrow",
  "humanReadableAbiList": [
   "event Lock(address,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecEscrowNativeFacet",
  "humanReadableAbiList": [
   "function deposit() payable returns (bool)",
   "function depositFor(address) payable returns (bool)",
   "function depositForArray(uint256[],address[]) payable returns (bool)",
   "function recover() nonpayable returns (uint256)",
   "function withdraw(uint256) nonpayable returns (bool)",
   "function withdrawTo(uint256,address) nonpayable returns (bool)",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IexecEscrowTokenFacet",
  "humanReadableAbiList": [
   "function deposit(uint256) nonpayable returns (bool)",
   "function depositFor(uint256,address) nonpayable returns (bool)",
   "function depositForArray(uint256[],address[]) nonpayable returns (bool)",
   "function receiveApproval(address,uint256,address,bytes) nonpayable returns (bool)",
   "function recover() nonpayable returns (uint256)",
   "function withdraw(uint256) nonpayable returns (bool)",
   "function withdrawTo(uint256,address) nonpayable returns (bool)",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IexecEscrowTokenSwapFacet",
  "humanReadableAbiList": [
   "function UniswapV2Router() view returns (address)",
   "function depositEth() payable",
   "function depositEthFor(address) payable",
   "function estimateDepositEthSent(uint256) view returns (uint256)",
   "function estimateDepositTokenWanted(uint256) view returns (uint256)",
   "function estimateWithdrawEthWanted(uint256) view returns (uint256)",
   "function estimateWithdrawTokenSent(uint256) view returns (uint256)",
   "function matchOrdersWithEth((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) payable returns (bytes32)",
   "function requestToken(uint256) payable",
   "function requestTokenFor(uint256,address) payable",
   "function safeDepositEth(uint256) payable",
   "function safeDepositEthFor(uint256,address) payable",
   "function safeWithdrawEth(uint256,uint256) nonpayable",
   "function safeWithdrawEthTo(uint256,uint256,address) nonpayable",
   "function withdrawEth(uint256) nonpayable",
   "function withdrawEthTo(uint256,address) nonpayable",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IexecOrderManagementFacet",
  "humanReadableAbiList": [
   "function manageAppOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageDatasetOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageRequestOrder(((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageWorkerpoolOrder(((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "event ClosedAppOrder(bytes32)",
   "event ClosedDatasetOrder(bytes32)",
   "event ClosedRequestOrder(bytes32)",
   "event ClosedWorkerpoolOrder(bytes32)",
   "event SignedAppOrder(bytes32)",
   "event SignedDatasetOrder(bytes32)",
   "event SignedRequestOrder(bytes32)",
   "event SignedWorkerpoolOrder(bytes32)"
  ]
 },
 {
  "contractName": "IexecPoco1Facet",
  "humanReadableAbiList": [
   "function assertDatasetDealCompatibility((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),bytes32) view",
   "function matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function sponsorMatchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function verifyPresignature(address,bytes32) view returns (bool)",
   "function verifyPresignatureOrSignature(address,bytes32,bytes) view returns (bool)",
   "function verifySignature(address,bytes32,bytes) view returns (bool)",
   "event DealSponsored(bytes32,address)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNotice(address,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecPoco2Facet",
  "humanReadableAbiList": [
   "function claim(bytes32) nonpayable",
   "function claimArray(bytes32[]) nonpayable returns (bool)",
   "function contribute(bytes32,bytes32,bytes32,address,bytes,bytes) nonpayable",
   "function contributeAndFinalize(bytes32,bytes32,bytes,bytes,address,bytes,bytes) nonpayable",
   "function finalize(bytes32,bytes,bytes) nonpayable",
   "function initialize(bytes32,uint256) nonpayable returns (bytes32)",
   "function initializeAndClaimArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function initializeArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function reopen(bytes32) nonpayable",
   "function reveal(bytes32,bytes32) nonpayable",
   "event AccurateContribution(address,bytes32)",
   "event FaultyContribution(address,bytes32)",
   "event Lock(address,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event TaskClaimed(bytes32)",
   "event TaskConsensus(bytes32,bytes32)",
   "event TaskContribute(bytes32,address,bytes32)",
   "event TaskFinalize(bytes32,bytes)",
   "event TaskInitialize(bytes32,address)",
   "event TaskReopen(bytes32)",
   "event TaskReveal(bytes32,address,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecPocoAccessorsFacet",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function appregistry() view returns (address)",
   "function balanceOf(address) view returns (uint256)",
   "function callbackgas() view returns (uint256)",
   "function computeDealVolume((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) view returns (uint256)",
   "function contribution_deadline_ratio() pure returns (uint256)",
   "function countCategory() view returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function decimals() view returns (uint8)",
   "function eip712domain_separator() view returns (bytes32)",
   "function final_deadline_ratio() pure returns (uint256)",
   "function frozenOf(address) view returns (uint256)",
   "function groupmember_purpose() pure returns (uint256)",
   "function kitty_address() pure returns (address)",
   "function kitty_min() pure returns (uint256)",
   "function kitty_ratio() pure returns (uint256)",
   "function name() view returns (string)",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal_deadline_ratio() pure returns (uint256)",
   "function symbol() view returns (string)",
   "function teebroker() view returns (address)",
   "function token() view returns (address)",
   "function totalSupply() view returns (uint256)",
   "function viewAccount(address) view returns (tuple)",
   "function viewApp(address) view returns (tuple)",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewDataset(address) view returns (tuple)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewPresigned(bytes32) view returns (address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewWorkerpool(address) view returns (tuple)",
   "function workerpool_stake_ratio() pure returns (uint256)",
   "function workerpoolregistry() view returns (address)"
  ]
 },
 {
  "contractName": "IexecPocoBoostAccessorsFacet",
  "humanReadableAbiList": [
   "function viewDealBoost(bytes32) view returns (tuple)"
  ]
 },
 {
  "contractName": "IexecPocoBoostFacet",
  "humanReadableAbiList": [
   "function claimBoost(bytes32,uint256) nonpayable",
   "function matchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function pushResultBoost(bytes32,uint256,bytes,bytes,bytes,address,bytes) nonpayable",
   "function sponsorMatchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "event DealSponsoredBoost(bytes32,address)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event ResultPushedBoost(bytes32,uint256,bytes)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNoticeBoost(address,bytes32,address,address,uint256,bytes32,string,address)",
   "event Seize(address,uint256,bytes32)",
   "event TaskClaimed(bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecPocoCommon",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IexecRelayFacet",
  "humanReadableAbiList": [
   "function broadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable",
   "function broadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable",
   "event BroadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes))",
   "event BroadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes))"
  ]
 },
 {
  "contractName": "SignatureVerifier",
  "humanReadableAbiList": []
 },
 {
  "contractName": "SignatureVerifier",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IOwnable",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function renounceOwnership() nonpayable",
   "function transferOwnership(address) nonpayable",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "IexecAccessorsABILegacy",
  "humanReadableAbiList": [
   "function viewAccountABILegacy(address) view returns (uint256, uint256)",
   "function viewCategoryABILegacy(uint256) view returns (string, string, uint256)",
   "function viewConfigABILegacy(bytes32) view returns (uint256, uint256, uint256, uint256, uint256, uint256)",
   "function viewContributionABILegacy(bytes32,address) view returns (uint8, bytes32, bytes32, address)",
   "function viewDealABILegacy_pt1(bytes32) view returns (address, address, uint256, address, address, uint256, address, address, uint256)",
   "function viewDealABILegacy_pt2(bytes32) view returns (uint256, bytes32, address, address, address, string)",
   "function viewTaskABILegacy(bytes32) view returns (uint8, bytes32, uint256, uint256, uint256, uint256, uint256, bytes32, uint256, uint256, address[], bytes)"
  ]
 },
 {
  "contractName": "IexecCategoryManager",
  "humanReadableAbiList": [
   "function createCategory(string,string,uint256) nonpayable returns (uint256)",
   "event CreateCategory(uint256,string,string,uint256)"
  ]
 },
 {
  "contractName": "IexecConfiguration",
  "humanReadableAbiList": [
   "function configure(address,string,string,uint8,address,address,address,address) nonpayable",
   "function domain() view returns (tuple)",
   "function importScore(address) nonpayable",
   "function setCallbackGas(uint256) nonpayable",
   "function setTeeBroker(address) nonpayable",
   "function updateDomainSeparator() nonpayable"
  ]
 },
 {
  "contractName": "IexecConfigurationExtra",
  "humanReadableAbiList": [
   "function changeRegistries(address,address,address) nonpayable"
  ]
 },
 {
  "contractName": "IexecERC20",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable returns (bool)",
   "function approveAndCall(address,uint256,bytes) nonpayable returns (bool)",
   "function decreaseAllowance(address,uint256) nonpayable returns (bool)",
   "function increaseAllowance(address,uint256) nonpayable returns (bool)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "event Approval(address,address,uint256)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IexecERC20Common",
  "humanReadableAbiList": [
   "event Lock(address,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecEscrowNative",
  "humanReadableAbiList": [
   "function deposit() payable returns (bool)",
   "function depositFor(address) payable returns (bool)",
   "function depositForArray(uint256[],address[]) payable returns (bool)",
   "function recover() nonpayable returns (uint256)",
   "function withdraw(uint256) nonpayable returns (bool)",
   "function withdrawTo(uint256,address) nonpayable returns (bool)"
  ]
 },
 {
  "contractName": "IexecEscrowToken",
  "humanReadableAbiList": [
   "function deposit(uint256) nonpayable returns (bool)",
   "function depositFor(uint256,address) nonpayable returns (bool)",
   "function depositForArray(uint256[],address[]) nonpayable returns (bool)",
   "function recover() nonpayable returns (uint256)",
   "function withdraw(uint256) nonpayable returns (bool)",
   "function withdrawTo(uint256,address) nonpayable returns (bool)"
  ]
 },
 {
  "contractName": "IexecEscrowTokenSwap",
  "humanReadableAbiList": [
   "function UniswapV2Router() view returns (address)",
   "function depositEth() payable",
   "function depositEthFor(address) payable",
   "function estimateDepositEthSent(uint256) view returns (uint256)",
   "function estimateDepositTokenWanted(uint256) view returns (uint256)",
   "function estimateWithdrawEthWanted(uint256) view returns (uint256)",
   "function estimateWithdrawTokenSent(uint256) view returns (uint256)",
   "function matchOrdersWithEth((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) payable returns (bytes32)",
   "function requestToken(uint256) payable",
   "function requestTokenFor(uint256,address) payable",
   "function safeDepositEth(uint256) payable",
   "function safeDepositEthFor(uint256,address) payable",
   "function safeWithdrawEth(uint256,uint256) nonpayable",
   "function safeWithdrawEthTo(uint256,uint256,address) nonpayable",
   "function withdrawEth(uint256) nonpayable",
   "function withdrawEthTo(uint256,address) nonpayable"
  ]
 },
 {
  "contractName": "IexecOrderManagement",
  "humanReadableAbiList": [
   "function manageAppOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageDatasetOrder(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageRequestOrder(((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes),uint8,bytes)) nonpayable",
   "function manageWorkerpoolOrder(((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),uint8,bytes)) nonpayable",
   "event ClosedAppOrder(bytes32)",
   "event ClosedDatasetOrder(bytes32)",
   "event ClosedRequestOrder(bytes32)",
   "event ClosedWorkerpoolOrder(bytes32)",
   "event SignedAppOrder(bytes32)",
   "event SignedDatasetOrder(bytes32)",
   "event SignedRequestOrder(bytes32)",
   "event SignedWorkerpoolOrder(bytes32)"
  ]
 },
 {
  "contractName": "IexecPoco1",
  "humanReadableAbiList": [
   "function assertDatasetDealCompatibility((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),bytes32) view",
   "function matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function sponsorMatchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function verifyPresignature(address,bytes32) view returns (bool)",
   "function verifyPresignatureOrSignature(address,bytes32,bytes) view returns (bool)",
   "function verifySignature(address,bytes32,bytes) view returns (bool)",
   "event DealSponsored(bytes32,address)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event SchedulerNotice(address,bytes32)"
  ]
 },
 {
  "contractName": "IexecPoco1Errors",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IexecPoco2",
  "humanReadableAbiList": [
   "function claim(bytes32) nonpayable",
   "function claimArray(bytes32[]) nonpayable returns (bool)",
   "function contribute(bytes32,bytes32,bytes32,address,bytes,bytes) nonpayable",
   "function contributeAndFinalize(bytes32,bytes32,bytes,bytes,address,bytes,bytes) nonpayable",
   "function finalize(bytes32,bytes,bytes) nonpayable",
   "function initialize(bytes32,uint256) nonpayable returns (bytes32)",
   "function initializeAndClaimArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function initializeArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function reopen(bytes32) nonpayable",
   "function reveal(bytes32,bytes32) nonpayable",
   "event AccurateContribution(address,bytes32)",
   "event FaultyContribution(address,bytes32)",
   "event TaskClaimed(bytes32)",
   "event TaskConsensus(bytes32,bytes32)",
   "event TaskContribute(bytes32,address,bytes32)",
   "event TaskFinalize(bytes32,bytes)",
   "event TaskInitialize(bytes32,address)",
   "event TaskReopen(bytes32)",
   "event TaskReveal(bytes32,address,bytes32)"
  ]
 },
 {
  "contractName": "IexecPocoAccessors",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function appregistry() view returns (address)",
   "function balanceOf(address) view returns (uint256)",
   "function callbackgas() view returns (uint256)",
   "function computeDealVolume((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) view returns (uint256)",
   "function contribution_deadline_ratio() view returns (uint256)",
   "function countCategory() view returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function decimals() view returns (uint8)",
   "function eip712domain_separator() view returns (bytes32)",
   "function final_deadline_ratio() view returns (uint256)",
   "function frozenOf(address) view returns (uint256)",
   "function groupmember_purpose() view returns (uint256)",
   "function kitty_address() view returns (address)",
   "function kitty_min() view returns (uint256)",
   "function kitty_ratio() view returns (uint256)",
   "function name() view returns (string)",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal_deadline_ratio() view returns (uint256)",
   "function symbol() view returns (string)",
   "function teebroker() view returns (address)",
   "function token() view returns (address)",
   "function totalSupply() view returns (uint256)",
   "function viewAccount(address) view returns (tuple)",
   "function viewApp(address) view returns (tuple)",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewDataset(address) view returns (tuple)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewPresigned(bytes32) view returns (address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewWorkerpool(address) view returns (tuple)",
   "function workerpool_stake_ratio() view returns (uint256)",
   "function workerpoolregistry() view returns (address)"
  ]
 },
 {
  "contractName": "IexecPocoBoost",
  "humanReadableAbiList": [
   "function claimBoost(bytes32,uint256) nonpayable",
   "function matchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function pushResultBoost(bytes32,uint256,bytes,bytes,bytes,address,bytes) nonpayable",
   "function sponsorMatchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "event DealSponsoredBoost(bytes32,address)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event ResultPushedBoost(bytes32,uint256,bytes)",
   "event SchedulerNoticeBoost(address,bytes32,address,address,uint256,bytes32,string,address)",
   "event TaskClaimed(bytes32)"
  ]
 },
 {
  "contractName": "IexecPocoBoostAccessors",
  "humanReadableAbiList": [
   "function viewDealBoost(bytes32) view returns (tuple)"
  ]
 },
 {
  "contractName": "IexecRelay",
  "humanReadableAbiList": [
   "function broadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) nonpayable",
   "function broadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable",
   "function broadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) nonpayable",
   "event BroadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))",
   "event BroadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes))",
   "event BroadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes))"
  ]
 },
 {
  "contractName": "IexecTokenSpender",
  "humanReadableAbiList": [
   "function receiveApproval(address,uint256,address,bytes) nonpayable returns (bool)"
  ]
 },
 {
  "contractName": "IexecLibCore_v5",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IexecLibOrders_v5",
  "humanReadableAbiList": [
   "function APPORDEROPERATION_TYPEHASH() view returns (bytes32)",
   "function APPORDER_TYPEHASH() view returns (bytes32)",
   "function DATASETORDEROPERATION_TYPEHASH() view returns (bytes32)",
   "function DATASETORDER_TYPEHASH() view returns (bytes32)",
   "function EIP712DOMAIN_TYPEHASH() view returns (bytes32)",
   "function REQUESTORDEROPERATION_TYPEHASH() view returns (bytes32)",
   "function REQUESTORDER_TYPEHASH() view returns (bytes32)",
   "function WORKERPOOLORDEROPERATION_TYPEHASH() view returns (bytes32)",
   "function WORKERPOOLORDER_TYPEHASH() view returns (bytes32)",
   "function hash((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes)) pure returns (bytes32)",
   "function hash(((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes),IexecLibOrders_v5.OrderOperationEnum,bytes)) pure returns (bytes32)",
   "function hash(((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),IexecLibOrders_v5.OrderOperationEnum,bytes)) pure returns (bytes32)",
   "function hash(((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),IexecLibOrders_v5.OrderOperationEnum,bytes)) pure returns (bytes32)",
   "function hash((string,string,uint256,address)) pure returns (bytes32)",
   "function hash((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) pure returns (bytes32)",
   "function hash((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes)) pure returns (bytes32)"
  ]
 },
 {
  "contractName": "PocoStorageLib",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IRegistry",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function isRegistered(address) view returns (bool)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "PocoStorageLib",
  "humanReadableAbiList": []
 },
 {
  "contractName": "IRegistry",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function getApproved(uint256) view returns (address)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function isRegistered(address) view returns (bool)",
   "function ownerOf(uint256) view returns (address)",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "Registry",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function baseURI() view returns (string)",
   "function getApproved(uint256) view returns (address)",
   "function initialize(address) nonpayable",
   "function initialized() view returns (bool)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function isRegistered(address) view returns (bool)",
   "function master() view returns (address)",
   "function name() view returns (string)",
   "function owner() view returns (address)",
   "function ownerOf(uint256) view returns (address)",
   "function previous() view returns (address)",
   "function proxyCode() view returns (bytes)",
   "function proxyCodeHash() view returns (bytes32)",
   "function renounceOwnership() nonpayable",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function setBaseURI(string) nonpayable",
   "function setName(address,string) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function symbol() view returns (string)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function tokenURI(uint256) view returns (string)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "function transferOwnership(address) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event OwnershipTransferred(address,address)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "RegistryEntry",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function registry() view returns (address)",
   "function setName(address,string) nonpayable"
  ]
 },
 {
  "contractName": "App",
  "humanReadableAbiList": [
   "function initialize(string,string,bytes,bytes32,bytes) nonpayable",
   "function m_appChecksum() view returns (bytes32)",
   "function m_appMREnclave() view returns (bytes)",
   "function m_appMultiaddr() view returns (bytes)",
   "function m_appName() view returns (string)",
   "function m_appType() view returns (string)",
   "function owner() view returns (address)",
   "function registry() view returns (address)",
   "function setName(address,string) nonpayable"
  ]
 },
 {
  "contractName": "AppRegistry",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function baseURI() view returns (string)",
   "function createApp(address,string,string,bytes,bytes32,bytes) nonpayable returns (address)",
   "function getApproved(uint256) view returns (address)",
   "function initialize(address) nonpayable",
   "function initialized() view returns (bool)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function isRegistered(address) view returns (bool)",
   "function master() view returns (address)",
   "function name() view returns (string)",
   "function owner() view returns (address)",
   "function ownerOf(uint256) view returns (address)",
   "function predictApp(address,string,string,bytes,bytes32,bytes) view returns (address)",
   "function previous() view returns (address)",
   "function proxyCode() view returns (bytes)",
   "function proxyCodeHash() view returns (bytes32)",
   "function renounceOwnership() nonpayable",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function setBaseURI(string) nonpayable",
   "function setName(address,string) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function symbol() view returns (string)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function tokenURI(uint256) view returns (string)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "function transferOwnership(address) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event OwnershipTransferred(address,address)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IApp",
  "humanReadableAbiList": [
   "function m_appChecksum() view returns (bytes32)",
   "function m_appMREnclave() view returns (bytes)",
   "function m_appMultiaddr() view returns (bytes)",
   "function m_appName() view returns (string)",
   "function m_appType() view returns (string)",
   "function owner() view returns (address)"
  ]
 },
 {
  "contractName": "Dataset",
  "humanReadableAbiList": [
   "function initialize(string,bytes,bytes32) nonpayable",
   "function m_datasetChecksum() view returns (bytes32)",
   "function m_datasetMultiaddr() view returns (bytes)",
   "function m_datasetName() view returns (string)",
   "function owner() view returns (address)",
   "function registry() view returns (address)",
   "function setName(address,string) nonpayable"
  ]
 },
 {
  "contractName": "DatasetRegistry",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function baseURI() view returns (string)",
   "function createDataset(address,string,bytes,bytes32) nonpayable returns (address)",
   "function getApproved(uint256) view returns (address)",
   "function initialize(address) nonpayable",
   "function initialized() view returns (bool)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function isRegistered(address) view returns (bool)",
   "function master() view returns (address)",
   "function name() view returns (string)",
   "function owner() view returns (address)",
   "function ownerOf(uint256) view returns (address)",
   "function predictDataset(address,string,bytes,bytes32) view returns (address)",
   "function previous() view returns (address)",
   "function proxyCode() view returns (bytes)",
   "function proxyCodeHash() view returns (bytes32)",
   "function renounceOwnership() nonpayable",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function setBaseURI(string) nonpayable",
   "function setName(address,string) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function symbol() view returns (string)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function tokenURI(uint256) view returns (string)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "function transferOwnership(address) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event OwnershipTransferred(address,address)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "IDataset",
  "humanReadableAbiList": [
   "function m_datasetChecksum() view returns (bytes32)",
   "function m_datasetMultiaddr() view returns (bytes)",
   "function m_datasetName() view returns (string)",
   "function owner() view returns (address)"
  ]
 },
 {
  "contractName": "IWorkerpool",
  "humanReadableAbiList": [
   "function m_schedulerRewardRatioPolicy() view returns (uint256)",
   "function m_workerStakeRatioPolicy() view returns (uint256)",
   "function m_workerpoolDescription() view returns (string)",
   "function owner() view returns (address)"
  ]
 },
 {
  "contractName": "Workerpool",
  "humanReadableAbiList": [
   "function changePolicy(uint256,uint256) nonpayable",
   "function initialize(string) nonpayable",
   "function m_schedulerRewardRatioPolicy() view returns (uint256)",
   "function m_workerStakeRatioPolicy() view returns (uint256)",
   "function m_workerpoolDescription() view returns (string)",
   "function owner() view returns (address)",
   "function registry() view returns (address)",
   "function setName(address,string) nonpayable",
   "event PolicyUpdate(uint256,uint256,uint256,uint256)"
  ]
 },
 {
  "contractName": "WorkerpoolRegistry",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable",
   "function balanceOf(address) view returns (uint256)",
   "function baseURI() view returns (string)",
   "function createWorkerpool(address,string) nonpayable returns (address)",
   "function getApproved(uint256) view returns (address)",
   "function initialize(address) nonpayable",
   "function initialized() view returns (bool)",
   "function isApprovedForAll(address,address) view returns (bool)",
   "function isRegistered(address) view returns (bool)",
   "function master() view returns (address)",
   "function name() view returns (string)",
   "function owner() view returns (address)",
   "function ownerOf(uint256) view returns (address)",
   "function predictWorkerpool(address,string) view returns (address)",
   "function previous() view returns (address)",
   "function proxyCode() view returns (bytes)",
   "function proxyCodeHash() view returns (bytes32)",
   "function renounceOwnership() nonpayable",
   "function safeTransferFrom(address,address,uint256) nonpayable",
   "function safeTransferFrom(address,address,uint256,bytes) nonpayable",
   "function setApprovalForAll(address,bool) nonpayable",
   "function setBaseURI(string) nonpayable",
   "function setName(address,string) nonpayable",
   "function supportsInterface(bytes4) view returns (bool)",
   "function symbol() view returns (string)",
   "function tokenByIndex(uint256) view returns (uint256)",
   "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
   "function tokenURI(uint256) view returns (string)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable",
   "function transferOwnership(address) nonpayable",
   "event Approval(address,address,uint256)",
   "event ApprovalForAll(address,address,bool)",
   "event OwnershipTransferred(address,address)",
   "event Transfer(address,address,uint256)"
  ]
 },
 {
  "contractName": "TimelockController",
  "humanReadableAbiList": [
   "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
   "function EXECUTOR_ROLE() view returns (bytes32)",
   "function PROPOSER_ROLE() view returns (bytes32)",
   "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
   "function cancel(bytes32) nonpayable",
   "function execute(address,uint256,bytes,bytes32,bytes32) payable",
   "function executeBatch(address[],uint256[],bytes[],bytes32,bytes32) payable",
   "function getMinDelay() view returns (uint256)",
   "function getRoleAdmin(bytes32) view returns (bytes32)",
   "function getRoleMember(bytes32,uint256) view returns (address)",
   "function getRoleMemberCount(bytes32) view returns (uint256)",
   "function getTimestamp(bytes32) view returns (uint256)",
   "function grantRole(bytes32,address) nonpayable",
   "function hasRole(bytes32,address) view returns (bool)",
   "function hashOperation(address,uint256,bytes,bytes32,bytes32) pure returns (bytes32)",
   "function hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32) pure returns (bytes32)",
   "function isOperationDone(bytes32) view returns (bool)",
   "function isOperationPending(bytes32) view returns (bool)",
   "function isOperationReady(bytes32) view returns (bool)",
   "function renounceRole(bytes32,address) nonpayable",
   "function revokeRole(bytes32,address) nonpayable",
   "function schedule(address,uint256,bytes,bytes32,bytes32,uint256) nonpayable",
   "function scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256) nonpayable",
   "function updateDelay(uint256) nonpayable",
   "event CallExecuted(bytes32,uint256,address,uint256,bytes)",
   "event CallScheduled(bytes32,uint256,address,uint256,bytes,bytes32,uint256)",
   "event Cancelled(bytes32)",
   "event MinDelayChange(uint256,uint256)",
   "event RoleAdminChanged(bytes32,bytes32,bytes32)",
   "event RoleGranted(bytes32,address,address)",
   "event RoleRevoked(bytes32,address,address)"
  ]
 },
 {
  "contractName": "DiamondStorageDiagram",
  "humanReadableAbiList": []
 },
 {
  "contractName": "PocoStorageDiagram",
  "humanReadableAbiList": []
 },
 {
  "contractName": "ERC1271Mock",
  "humanReadableAbiList": [
   "function isValidSignature(bytes32,bytes) pure returns (bytes4)"
  ]
 },
 {
  "contractName": "ERC734Mock",
  "humanReadableAbiList": [
   "function keyHasPurpose(bytes32,uint256) view returns (bool)",
   "function setKeyHasPurpose(bytes32,uint256) nonpayable"
  ]
 },
 {
  "contractName": "GasWasterClient",
  "humanReadableAbiList": [
   "function counter() view returns (uint256)",
   "function receiveResult(bytes32,bytes) nonpayable",
   "event GotResult(bytes32,bytes)"
  ]
 },
 {
  "contractName": "IexecEscrowTestContract",
  "humanReadableAbiList": [
   "function balanceOf(address) view returns (uint256)",
   "function frozenOf(address) view returns (uint256)",
   "function lock_(address,uint256) nonpayable",
   "function reward_(address,uint256,bytes32) nonpayable",
   "function seize_(address,uint256,bytes32) nonpayable",
   "function setBalance(address,uint256) nonpayable",
   "function unlock_(address,uint256) nonpayable",
   "event Lock(address,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "IexecPocoBoostCompositeFacet",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function appregistry() view returns (address)",
   "function balanceOf(address) view returns (uint256)",
   "function callbackgas() view returns (uint256)",
   "function claimBoost(bytes32,uint256) nonpayable",
   "function computeDealVolume((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) view returns (uint256)",
   "function contribution_deadline_ratio() pure returns (uint256)",
   "function countCategory() view returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function decimals() view returns (uint8)",
   "function eip712domain_separator() view returns (bytes32)",
   "function final_deadline_ratio() pure returns (uint256)",
   "function frozenOf(address) view returns (uint256)",
   "function groupmember_purpose() pure returns (uint256)",
   "function kitty_address() pure returns (address)",
   "function kitty_min() pure returns (uint256)",
   "function kitty_ratio() pure returns (uint256)",
   "function matchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function name() view returns (string)",
   "function pushResultBoost(bytes32,uint256,bytes,bytes,bytes,address,bytes) nonpayable",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal_deadline_ratio() pure returns (uint256)",
   "function sponsorMatchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function symbol() view returns (string)",
   "function teebroker() view returns (address)",
   "function token() view returns (address)",
   "function totalSupply() view returns (uint256)",
   "function viewAccount(address) view returns (tuple)",
   "function viewApp(address) view returns (tuple)",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewDataset(address) view returns (tuple)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewDealBoost(bytes32) view returns (tuple)",
   "function viewPresigned(bytes32) view returns (address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewWorkerpool(address) view returns (tuple)",
   "function workerpool_stake_ratio() pure returns (uint256)",
   "function workerpoolregistry() view returns (address)",
   "event DealSponsoredBoost(bytes32,address)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event ResultPushedBoost(bytes32,uint256,bytes)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNoticeBoost(address,bytes32,address,address,uint256,bytes32,string,address)",
   "event Seize(address,uint256,bytes32)",
   "event TaskClaimed(bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "OwnableMock",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function renounceOwnership() nonpayable",
   "function transferOwnership(address) nonpayable",
   "event OwnershipTransferred(address,address)"
  ]
 },
 {
  "contractName": "TestClient",
  "humanReadableAbiList": [
   "function gstore(bytes32) view returns (uint256)",
   "function receiveResult(bytes32,bytes) nonpayable",
   "function store(bytes32) view returns (bytes)",
   "event GotResult(bytes32,bytes)"
  ]
 },
 {
  "contractName": "TestReceiver",
  "humanReadableAbiList": [
   "function receiveApproval(address,uint256,address,bytes) nonpayable returns (bool)",
   "event GotApproval(address,uint256,address,bytes)"
  ]
 },
 {
  "contractName": "Slither",
  "humanReadableAbiList": [
   "function allowance(address,address) view returns (uint256)",
   "function appregistry() view returns (address)",
   "function assertDatasetDealCompatibility((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),bytes32) view",
   "function balanceOf(address) view returns (uint256)",
   "function callbackgas() view returns (uint256)",
   "function claim(bytes32) nonpayable",
   "function claimArray(bytes32[]) nonpayable returns (bool)",
   "function computeDealVolume((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) view returns (uint256)",
   "function contribute(bytes32,bytes32,bytes32,address,bytes,bytes) nonpayable",
   "function contributeAndFinalize(bytes32,bytes32,bytes,bytes,address,bytes,bytes) nonpayable",
   "function contribution_deadline_ratio() pure returns (uint256)",
   "function countCategory() view returns (uint256)",
   "function datasetregistry() view returns (address)",
   "function decimals() view returns (uint8)",
   "function eip712domain_separator() view returns (bytes32)",
   "function final_deadline_ratio() pure returns (uint256)",
   "function finalize(bytes32,bytes,bytes) nonpayable",
   "function frozenOf(address) view returns (uint256)",
   "function groupmember_purpose() pure returns (uint256)",
   "function initialize(bytes32,uint256) nonpayable returns (bytes32)",
   "function initializeAndClaimArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function initializeArray(bytes32[],uint256[]) nonpayable returns (bool)",
   "function kitty_address() pure returns (address)",
   "function kitty_min() pure returns (uint256)",
   "function kitty_ratio() pure returns (uint256)",
   "function matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function name() view returns (string)",
   "function reopen(bytes32) nonpayable",
   "function resultFor(bytes32) view returns (bytes)",
   "function reveal(bytes32,bytes32) nonpayable",
   "function reveal_deadline_ratio() pure returns (uint256)",
   "function sponsorMatchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function symbol() view returns (string)",
   "function teebroker() view returns (address)",
   "function token() view returns (address)",
   "function totalSupply() view returns (uint256)",
   "function verifyPresignature(address,bytes32) view returns (bool)",
   "function verifyPresignatureOrSignature(address,bytes32,bytes) view returns (bool)",
   "function verifySignature(address,bytes32,bytes) view returns (bool)",
   "function viewAccount(address) view returns (tuple)",
   "function viewApp(address) view returns (tuple)",
   "function viewCategory(uint256) view returns (tuple)",
   "function viewConsumed(bytes32) view returns (uint256)",
   "function viewContribution(bytes32,address) view returns (tuple)",
   "function viewDataset(address) view returns (tuple)",
   "function viewDeal(bytes32) view returns (tuple)",
   "function viewPresigned(bytes32) view returns (address)",
   "function viewScore(address) view returns (uint256)",
   "function viewTask(bytes32) view returns (tuple)",
   "function viewWorkerpool(address) view returns (tuple)",
   "function workerpool_stake_ratio() pure returns (uint256)",
   "function workerpoolregistry() view returns (address)",
   "event AccurateContribution(address,bytes32)",
   "event DealSponsored(bytes32,address)",
   "event FaultyContribution(address,bytes32)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNotice(address,bytes32)",
   "event Seize(address,uint256,bytes32)",
   "event TaskClaimed(bytes32)",
   "event TaskConsensus(bytes32,bytes32)",
   "event TaskContribute(bytes32,address,bytes32)",
   "event TaskFinalize(bytes32,bytes)",
   "event TaskInitialize(bytes32,address)",
   "event TaskReopen(bytes32)",
   "event TaskReveal(bytes32,address,bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "SlitherBoost",
  "humanReadableAbiList": [
   "function claimBoost(bytes32,uint256) nonpayable",
   "function matchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function pushResultBoost(bytes32,uint256,bytes,bytes,bytes,address,bytes) nonpayable",
   "function sponsorMatchOrdersBoost((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)) nonpayable returns (bytes32)",
   "function viewDealBoost(bytes32) view returns (tuple)",
   "event DealSponsoredBoost(bytes32,address)",
   "event Lock(address,uint256)",
   "event OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)",
   "event ResultPushedBoost(bytes32,uint256,bytes)",
   "event Reward(address,uint256,bytes32)",
   "event SchedulerNoticeBoost(address,bytes32,address,address,uint256,bytes32,string,address)",
   "event Seize(address,uint256,bytes32)",
   "event TaskClaimed(bytes32)",
   "event Transfer(address,address,uint256)",
   "event Unlock(address,uint256)"
  ]
 },
 {
  "contractName": "ICreateX",
  "humanReadableAbiList": [
   "function computeCreate2Address(bytes32,bytes32) view returns (address)",
   "function computeCreate2Address(bytes32,bytes32,address) pure returns (address)",
   "function computeCreate3Address(bytes32,address) pure returns (address)",
   "function computeCreate3Address(bytes32) view returns (address)",
   "function computeCreateAddress(uint256) view returns (address)",
   "function computeCreateAddress(address,uint256) view returns (address)",
   "function deployCreate(bytes) payable returns (address)",
   "function deployCreate2(bytes32,bytes) payable returns (address)",
   "function deployCreate2(bytes) payable returns (address)",
   "function deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256),address) payable returns (address)",
   "function deployCreate2AndInit(bytes,bytes,(uint256,uint256)) payable returns (address)",
   "function deployCreate2AndInit(bytes,bytes,(uint256,uint256),address) payable returns (address)",
   "function deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256)) payable returns (address)",
   "function deployCreate2Clone(bytes32,address,bytes) payable returns (address)",
   "function deployCreate2Clone(address,bytes) payable returns (address)",
   "function deployCreate3(bytes) payable returns (address)",
   "function deployCreate3(bytes32,bytes) payable returns (address)",
   "function deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256)) payable returns (address)",
   "function deployCreate3AndInit(bytes,bytes,(uint256,uint256)) payable returns (address)",
   "function deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256),address) payable returns (address)",
   "function deployCreate3AndInit(bytes,bytes,(uint256,uint256),address) payable returns (address)",
   "function deployCreateAndInit(bytes,bytes,(uint256,uint256)) payable returns (address)",
   "function deployCreateAndInit(bytes,bytes,(uint256,uint256),address) payable returns (address)",
   "function deployCreateClone(address,bytes) payable returns (address)",
   "event ContractCreation(address,bytes32)",
   "event ContractCreation(address)",
   "event Create3ProxyContractCreation(address,bytes32)"
  ]
 },
 {
  "contractName": "ERC20",
  "humanReadableAbiList": [
   "function approve(address,uint256) nonpayable returns (bool)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "function balanceOf(address) view returns (uint256)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function allowance(address,address) view returns (uint256)",
   "event Transfer(address,address,uint256)",
   "event Approval(address,address,uint256)"
  ]
 },
 {
  "contractName": "Ownable",
  "humanReadableAbiList": [
   "function owner() view returns (address)",
   "function transferOwnership(address) nonpayable"
  ]
 },
 {
  "contractName": "RLC",
  "humanReadableAbiList": [
   "function name() view returns (string)",
   "function approve(address,uint256) nonpayable returns (bool)",
   "function refill(address,uint256) nonpayable returns (bool)",
   "function totalSupply() view returns (uint256)",
   "function transferFrom(address,address,uint256) nonpayable returns (bool)",
   "function decimals() view returns (uint8)",
   "function initialSupply() view returns (uint256)",
   "function burn(uint256) nonpayable returns (bool)",
   "function version() view returns (string)",
   "function forceApprove(address,address,uint256) nonpayable returns (bool)",
   "function balanceOf(address) view returns (uint256)",
   "function owner() view returns (address)",
   "function symbol() view returns (string)",
   "function transfer(address,uint256) nonpayable returns (bool)",
   "function approveAndCall(address,uint256,bytes) nonpayable",
   "function locked() view returns (bool)",
   "function allowance(address,address) view returns (uint256)",
   "function forceBurn(address,uint256) nonpayable returns (bool)",
   "function transferOwnership(address) nonpayable",
   "event Transfer(address,address,uint256)",
   "event Approval(address,address,uint256)"
  ]
 },
 {
  "contractName": "SafeMath",
  "humanReadableAbiList": []
 },
 {
  "contractName": "TokenSpender",
  "humanReadableAbiList": [
   "function receiveApproval(address,uint256,address,bytes) nonpayable"
  ]
 }
]