@startuml
:iExecSmartContractUser:
:AppProvider:
:DatasetProvider:
:SchedulerProvider:
:WorkerProvider:
:Anyone:

cloud {
[IexecRelay]
}
component [IexecRelay]
iExecSmartContractUser -down-> [IexecRelay]: use

component [Marketplace]
[IexecRelay] -down-> [Marketplace]: broadcast userorder
AppProvider -down-> [Marketplace]: broadcast apporder
DatasetProvider -down-> [Marketplace]: broadcast dataorder
SchedulerProvider -down-> [Marketplace]: broadcast poolorder
Anyone -up-> [Marketplace]: read order

cloud {
[IexecPoCo1]
[IexecPoCo2]
[RLC Token]
}
component [IexecPoCo1]
component [IexecPoCo2]
component [RLC Token]
[IexecPoCo2] <-right-> [IexecPoCo1]
[IexecPoCo1] <-right-> [RLC Token]

Anyone -down-> [IexecPoCo1]: push matched orders
[IexecPoCo1] -up-> [Marketplace]: notification events

[iexec-scheduler] <-up-> [IexecPoCo2]
[iexec-worker] <-up-> [IexecPoCo2]

component [AppRegistry]
component [DatasetRegistry]
component [iexec-scheduler]
component [iexec-worker]
component [ResultRepository]

AppProvider -down-> AppRegistry: expose
DatasetProvider -down-> DatasetRegistry: expose
SchedulerProvider -down-> [iexec-scheduler]: control
SchedulerProvider -down-> [ResultRepository]: control and expose
ResultRepository <-right-> [iexec-scheduler]

[WorkerProvider] -right-> [iexec-worker]: control

[iexec-worker] <-right-> [iexec-scheduler]
[iexec-worker] <-up-> [AppRegistry]
[iexec-worker] <-up-> [DatasetRegistry]
@enduml