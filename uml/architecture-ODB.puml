@startuml
:iExecCloudUser:
:iExecSCUser:
:DappProvider:
:DataProvider:
:ScheduleProvider:
:ResourceProvider:
:Broker:

cloud {
  [IexecRelay]
}
component [IexecRelay]
iExecSCUser -down-> [IexecRelay]: use

component [Marketplace]
[IexecRelay] -down-> [Marketplace]: broadcast userorder
iExecCloudUser -down-> [Marketplace]: broadcast userorder
DappProvider -down-> [Marketplace]: broadcast dapporder
DataProvider -down-> [Marketplace]: broadcast dataorder
ScheduleProvider -down-> [Marketplace]: broadcast poolorder
Broker -up-> [Marketplace]: read order

cloud {
  [IexecPoco1]
  [IexecPoco2]
  [RLC Token]
}
component [IexecPoco1]
component [IexecPoco2]
component [RLC Token]
[IexecPoco2] <-right-> [IexecPoco1]
[IexecPoco1] <-right-> [RLC Token]

Broker -down-> [IexecPoco1]: push matched orders
[IexecPoco1] -up-> [Marketplace]: notification events

[iexec-scheduler] <-up-> [IexecPoco2]
[iexec-worker] <-up-> [IexecPoco2]





component [AppRepository]
component [DatasetRepository]
component [iexec-scheduler]
component [iexec-worker]
component [ResultRepository]

DappProvider -down-> AppRepository: expose
DataProvider -down-> DatasetRepository: expose
ScheduleProvider -down-> [iexec-scheduler]: control
ScheduleProvider -down-> [ResultRepository]: control and expose
ResultRepository <-right-> [iexec-scheduler]



[ResourceProvider] -right-> [iexec-worker]: control

[iexec-worker] <-right-> [iexec-scheduler]
[iexec-worker] <-up-> [AppRepository]
[iexec-worker] <-up-> [DatasetRepository]
@enduml
