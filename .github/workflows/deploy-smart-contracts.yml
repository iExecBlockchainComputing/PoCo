name: Deploy PoCo Contracts
on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network'
        required: true
        type: choice
        options:
          - hardhat
          - avalancheFujiTestnet
          - arbitrumSepolia
          - bellecour
        default: 'hardhat'
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - testnets
          - mainnets
        default: 'testnets'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate mainnet deployment conditions
        run: |
          #TODO remove this when we have other mainnets
          if [[ "${{ inputs.environment }}" == "mainnets" && !("${{ inputs.network }}" == "bellecour" && "${{ github.ref }}" == "refs/heads/main") ]]; then
            echo "::error::Bellecour mainnet deployments must be made from the main branch. Current branch: ${GITHUB_REF#refs/heads/}"
            exit 1
          fi

          echo "Deployment validation passed!"
  deploy:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for saving deployment
    environment: ${{ inputs.environment }} # Use the selected environment
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm' # Cache dependencies

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          if [ "${{ inputs.network }}" == "arbitrumSepolia" ]; then
            npm run test:arbitrumSepolia
          elif [ "${{ inputs.network }}" == "avalancheFujiTestnet" ]; then
            npm run test:fuji
          else
            npm run test
          fi

      - name: Set environment variables
        id: set-env
        run: |
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> $GITHUB_ENV
          if [ "${{ inputs.network }}" == "avalancheFujiTestnet" ]; then
            echo "FUJI_RPC_URL=${{ secrets.FUJI_RPC_URL }}" >> $GITHUB_ENV
            echo "SNOWTRACE_API_KEY=${{ secrets.SNOWTRACE_API_KEY }}" >> $GITHUB_ENV  
          fi

          if [ "${{ inputs.network }}" == "arbitrumSepolia" ]; then
            echo "ARBITRUM_SEPOLIA_RPC_URL=${{ secrets.ARBITRUM_SEPOLIA_RPC_URL }}" >> $GITHUB_ENV
            echo "ARBISCAN_API_KEY=${{ secrets.ARBISCAN_API_KEY }}" >> $GITHUB_ENV
          fi

          if [ "${{ inputs.network }}" == "bellecour" ]; then
            echo "BELLECOUR_RPC_URL=${{ secrets.BELLECOUR_RPC_URL }}" >> $GITHUB_ENV
          fi

      - name: Deploy contracts
        run: |
          echo "Deploying to: ${{ inputs.network }} with ${{ inputs.environment }} environment"
          npm run deploy -- --network ${{ inputs.network }}

      - name: Update config.json with Diamond proxy address
        if: inputs.network != 'hardhat'
        run: npx hardhat run scripts/tools/update-config.ts --network ${{ inputs.network }}

      - name: Save deployment artifacts and updated config
        if: inputs.network != 'hardhat'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: save deployment artifacts for ${{ inputs.network }} (${{ inputs.environment }}, ${{ github.run_id }})'
          file_pattern: 'deployments/${{ inputs.network }}/* config/config.json'
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_author: 'GitHub Actions Bot <github-actions[bot]@users.noreply.github.com>'
